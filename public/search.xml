<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java基础知识梳理</title>
      <link href="/2019/06/30/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/"/>
      <url>/2019/06/30/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="Java-基础内容"><a href="#Java-基础内容" class="headerlink" title="Java 基础内容"></a>Java 基础内容</h3><ul><li>数据类型</li><li>运算符</li><li>流程控制</li><li>面向对象</li><li>重要关键字</li><li>异常</li><li>编码</li><li>Object类</li></ul><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>计算机中最小的单位是bit，一个位0/1表示</p><p>基础数据类型</p><ul><li><p>byte  1字节 </p></li><li><p>short 2字节 </p></li><li><p>int  4字节</p></li><li><p>long 8字节</p></li><li><p>float 4字节</p></li><li><p>double 8字节</p></li><li><p>boolean 1字节</p></li><li><p>char 2字节 可以为unicode编码，位于栈</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a = <span class="string">'\u1233'</span>;<span class="comment">//unicode编码表达</span></span><br></pre></td></tr></table></figure></li></ul><p>引用数据类型：引用位于栈，引用的对象位于堆</p><p>高精度向低精度可能丢失，表达式中默认转换为当前表达式的最大精度进行计算</p><h5 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h5><ul><li>基础运算符</li><li>instanceof 用于判断对象是否是某类型</li></ul><h4 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h4><ul><li><p>if else</p></li><li><p>if elseif </p></li><li><p>while</p></li><li><p>do while</p></li><li><p>for</p></li><li><p>foreach 需要容器实现Iterable接口和Iterator接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(SomeType obj: objList) &#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><h5 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h5><p>关键字extends，类的继承和接口的继承</p><h5 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h5><p>访问控制private，default，protected，public</p><h5 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h5><p>通过父类或者接口引用访问实际对象的方法，称为动态绑定，实在运行时才能决定的。</p><h5 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h5><p>静态绑定，即同名方法存在不同的参数列表（类型，数量）</p><h5 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h5><p>成员和方法修饰为public ，实现的类需要实现方法，与接口间可以继承。只有声明，但是新版jdk可以存在默认方法，使用default定义</p><h5 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h5><p>匿名内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只是将匿名内部类复制给了一个引用，其实再参数传递中的内部类，同样也是将匿名内部类对象传递给了，临时的引用。</span></span><br><span class="line">   <span class="comment">//方法实现</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    B b = <span class="keyword">new</span> B()&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成员内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        A a = <span class="keyword">new</span> A();</span><br><span class="line">        B b = a.new B();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Class A&#123;</span><br><span class="line"><span class="keyword">static</span> B&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">()</span> </span>&#123;</span><br><span class="line">B b = <span class="keyword">new</span> A.B();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部类可以和成员一样访问外部类的成员。</p><p>匿名内部类对象在访问方法参数，参数需要定义为final，因为在方法中一旦一开，参数的生命周期也就结束了，但是匿名内部类对象还引用着，通过使用final来拷贝一份使用，间接的延长了生命周期，也就可以正常访问了。</p><h5 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h5><ul><li>强引用 只要持有强引用，JVM宁可抛出内存泄漏也不愿意去回收</li><li>软引用 在没有强引用的情况下且内存不足情况下会去回收对象</li><li>弱引用 在没有强引用的情况下回去回收对象</li><li>虚引用 形同虚设，常用于jvm内部跟踪垃圾回收过程</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好, Hexo</title>
      <link href="/2019/06/29/%E4%BD%A0%E5%A5%BD-Hexo/"/>
      <url>/2019/06/29/%E4%BD%A0%E5%A5%BD-Hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="你好"><a href="#你好" class="headerlink" title="你好"></a>你好</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class tet &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/06/29/hello-world/"/>
      <url>/2019/06/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
